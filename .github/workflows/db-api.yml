name: DB-API

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv

    - name: Install dependencies
      working-directory: ./app/db-api
      run: |
        pipenv install

    - name: Test with pytest
      working-directory: ./app/db-api
      run: |
        pipenv run pytest

  container:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::490586798761:role/GitHubActionsPowerUser
          role-duration-seconds: 1200

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - uses: actions/checkout@v3

    - name: Build, tag, and push docker image to Amazon ECR
      working-directory: ./app/db-api
      env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ecommerce
          IMAGE_TAG: DBAPI_latest
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
